{"version":3,"sources":["components/VisualData/VisualData.js","components/Plot/Plot.js","components/Graph/Graph.js","components/Card/Card.js","components/StatsCards/StatsCards.js","components/Table/Table.js","components/CountryList/CountryList.js","App.js","reportWebVitals.js","index.js"],"names":["VisualData","country","countryData","popData","label","angle","cases","radius","color","population","casesData","active","deaths","recovered","className","showLabels","colorType","animation","data","width","height","Plot","type","dotColor","stroke","card","plotedData","ans","date","newData","x","Date","y","push","plotTheData","margin","left","right","top","bottom","padding","stackBy","curve","lineStyle","markStyle","title","Graph","plotShow","url","useState","historicalData","sethistoricalData","useEffect","fetch","then","res","json","timeline","heading","numeral","format","Card","today","total","clicked","cardType","onClick","StatsCards","worldwide","setWorldwide","selectedCard","setSelectedCard","isCardClicked","setIsCardClicked","response","clickHandler","Table","countryList","setCountry","setCountryData","displayDetails","e","target","getAttribute","currentCountry","list","find","item","findCountryData","map","todayCases","countryInfo","value","src","flag","CountryList","setCountryList","fetchCountryList","sortedData","sort","a","b","sortData","search","setSearch","length","str","trim","toLowerCase","filter","match","placeholder","onChange","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43b14951.chunk.js","sourcesContent":["import React from 'react';\r\nimport {RadialChart} from 'react-vis';\r\nimport './VisualData.css'\r\n\r\nconst VisualData = ({country,countryData}) => {\r\n\r\n\r\n    //const myData = [ {angle: 1, radius: 10}, {angle: 2, label: 'Super Custom label', subLabel: 'With annotation', radius: 20}, {angle: 5, radius: 5, label: 'Alt Label'}, {angle: 3, radius: 14}, {angle: 5, radius: 12, subLabel: 'Sub Label only', className: 'custom-class'} ];               \r\n\r\n\r\n    const popData = [{label:'Cases',angle: countryData.cases,radius:1.5,color: 'orange'},\r\n                     {label:'Total Population',angle: countryData.population,radius:1,color:'teal'}];\r\n    const casesData = [{label:'Active',angle: countryData.active,radius:1.2,color:'red'},\r\n                      {label:'Deaths',angle: countryData.deaths,radius:1.5,color:'grey'},\r\n                      {label:'Recovered',angle: countryData.recovered,radius:1,color:'green'}];\r\n    \r\n    return (\r\n        <div className='pies'>   \r\n            <RadialChart\r\n            className='pie1'\r\n            showLabels={true}\r\n            colorType=\"literal\"\r\n            animation={true}\r\n            data={popData}\r\n            width={300}\r\n            height={300} />\r\n        \r\n            <RadialChart \r\n            className='pie2'\r\n            showLabels={true}\r\n            colorType=\"literal\"\r\n            animation={true}\r\n            data={casesData}\r\n            width={300}\r\n            height={300}/>\r\n    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VisualData\r\n","import React from 'react';\r\nimport {XYPlot,YAxis,LineMarkSeries, XAxis, HorizontalGridLines, VerticalGridLines} from 'react-vis';\r\nimport './Plot.css';\r\nimport 'react-vis/dist/style.css';\r\n\r\nconst plotTheData = (data) => {\r\nconst ans=[];\r\nfor(let date in data)\r\n{\r\n    let newData = {\r\n        x: new Date(date),\r\n        y: data[date]/1000000,\r\n    };\r\n    ans.push(newData);\r\n}\r\nreturn ans;\r\n}\r\n\r\nconst Plot = ({card,data}) => {\r\n\r\n    const plotedData = plotTheData(data);\r\n\r\n    let type,dotColor,stroke;\r\n    if(card==='cases'){\r\n        type='Total Cases';\r\n        dotColor = 'red';\r\n        stroke = 'lightred';\r\n    }\r\n    else if(card==='deaths'){\r\n        type='Total Deaths';\r\n        dotColor = 'grey';\r\n        stroke = 'lightgrey';\r\n    }\r\n    else{\r\n        type='Total Recovered';\r\n        dotColor = 'green';\r\n        stroke = 'lightgreen'\r\n    }\r\n    \r\n    return (\r\n        <div className='plot'>\r\n            <XYPlot\r\n            animation= {true}\r\n            width={400}\r\n            height={400}>\r\n                        <LineMarkSeries\r\n                            margin= {{left: 0, right: 0, top: 0, bottom: 0}}\r\n                            padding= {{left: 0, right: 0, top: 0, bottom: 0}}\r\n                            stackBy=\"x\"\r\n                            curve={'curveMonotoneY'}    \r\n                            color={dotColor}\r\n                            lineStyle={{stroke:\"#87556f\"}}\r\n                            markStyle={{stroke:{stroke}}}\r\n                            data={plotedData}/>\r\n\r\n                        <YAxis title=\"Numbers(Millions)\" />\r\n                        \r\n                        <HorizontalGridLines />\r\n                        \r\n            </XYPlot>\r\n\r\n\r\n            <h2>{type} Stats Day By Day</h2>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Plot\r\n","import React,{useEffect,useState} from 'react';\r\nimport VisualData from '../VisualData/VisualData';\r\nimport numeral from 'numeral';\r\nimport Plot from '../Plot/Plot';\r\nimport './Graph.css'\r\n\r\nconst Graph = ({plotShow,card,country,countryData}) => {\r\n\r\n\r\n\r\n    const url = (country==='Worldwide')?\r\n                'https://disease.sh/v3/covid-19/historical/all?lastdays=120':\r\n                `https://disease.sh/v3/covid-19/historical/${country}`;\r\n\r\n    const [historicalData,sethistoricalData] = useState();\r\n\r\n    useEffect(() => {\r\n        fetch(url).then(res => res.json())\r\n                  .then(data => {\r\n                      console.log('Graph useEffect triggered');\r\n                      (country==='Worldwide')?sethistoricalData(data):sethistoricalData(data.timeline);\r\n                    });\r\n                  \r\n    },[country,url]);\r\n\r\n    \r\n\r\n    const heading = (country==='Worldwide')?(<h1>Worldwide  ➜ <span>{numeral(countryData.active).format('00.00a')} </span> Active Cases</h1>):\r\n    (<h1>{country} ➜ <span>{numeral(countryData.active).format('0.00a')}</span> Active Cases</h1>);\r\n\r\n\r\n    return (\r\n        <div className=\"graph\">\r\n                {heading}    \r\n                {plotShow?\r\n                <Plot card={card} data={historicalData[card]}/>:\r\n                <VisualData country={country} countryData={countryData}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Graph\r\n","import React from 'react';\r\nimport './Card.css';\r\nimport numeral from 'numeral';\r\n\r\nconst Card = ({clicked,countryData,cardType}) => {\r\n\r\n    let today,total;\r\n\r\n    if(cardType === 'Cases')\r\n    {\r\n        today = 'todayCases'; total = 'cases';\r\n    }\r\n    else if(cardType === 'Recovered')\r\n    {\r\n        today = 'todayRecovered'; total = 'recovered'; \r\n    }\r\n    else{\r\n        today = 'todayDeaths'; total = 'deaths'; \r\n    }\r\n\r\n\r\n    return (\r\n        <div onClick={clicked} className='card'>\r\n\r\n            <h2 className={cardType}>{cardType}</h2>\r\n            <h1 className={cardType}>+{numeral(countryData[today]).format()}</h1>\r\n            <h3 className={cardType}>{numeral(countryData[total]).format('0.00a')}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React,{useEffect,useState} from 'react';\r\nimport Graph from '../Graph/Graph';\r\nimport Card from '../Card/Card';\r\nimport './StatsCards.css';\r\n\r\nconst StatsCards = ({country,countryData}) => {\r\n\r\n    const [worldwide,setWorldwide] = useState({});\r\n    const [selectedCard,setSelectedCard] = useState();\r\n    const [isCardClicked,setIsCardClicked] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://disease.sh/v3/covid-19/all\")\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            setWorldwide(data);\r\n          });\r\n          \r\n          console.log('StatsCards 1st useEffect triggered',worldwide);\r\n      }, []);\r\n\r\n    useEffect(() => {\r\n        console.log('StatCard 2nd useEffect Country Changed');\r\n        setSelectedCard();\r\n        setIsCardClicked(false);\r\n    },[country]);\r\n\r\n      if(country==='Worldwide') {countryData = worldwide;}\r\n\r\n      const clickHandler = (type) => {\r\n        console.log('Card Click',type);\r\n        setIsCardClicked(true);\r\n        setSelectedCard(type);\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"statsCard\">\r\n            <div className=\"cards\">\r\n                <Card clicked={()=>clickHandler('cases')} cardType='Cases' countryData={countryData}/>\r\n                <Card clicked={()=>clickHandler('recovered')} cardType='Recovered' countryData={countryData}/>\r\n                <Card clicked={()=>clickHandler('deaths')} cardType='Deaths' countryData={countryData}/>\r\n            </div>\r\n            \r\n                <Graph plotShow={isCardClicked} card={selectedCard} country={country} countryData={countryData} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatsCards;\r\n","import React,{useState} from 'react';\r\nimport numeral from 'numeral';\r\nimport StatsCards from '../StatsCards/StatsCards'\r\nimport './Table.css'\r\n  \r\nconst findCountryData = (list,data) =>{\r\n\r\n    return list.find(item => item.country===data)\r\n}\r\n\r\nconst Table = ({countryList}) => {\r\n\r\n    const [country,setCountry] = useState('Worldwide');\r\n    const [countryData,setCountryData] = useState({});\r\n\r\n    //On Country Click\r\n    const displayDetails = (e) => {\r\n        console.log('Event target',e.target.getAttribute('class'));\r\n        if(e.target.getAttribute('class')!=='countryName') return; //event delegation\r\n\r\n        const currentCountry = e.target.getAttribute('value');\r\n        const data = findCountryData(countryList,currentCountry);\r\n        \r\n        setCountry(currentCountry);\r\n        setCountryData(data);\r\n    }\r\n\r\n    return (\r\n        <div className=\"mainBody\">\r\n\r\n            <div className=\"table\">\r\n                <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Country</th><th>Today</th><th>Total</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"content\">\r\n                    {countryList.map(({country,todayCases,cases,countryInfo}) =>(\r\n                        <tr onClick={displayDetails} key={country}>\r\n                            <td className=\"countryName\" value={country}>\r\n                                {country} \r\n                                <img className=\"countryName\" value={country} src={countryInfo.flag}/> \r\n                            </td>\r\n                            <td><span>+{numeral(todayCases).format()}</span></td>\r\n                            <td><strong>{numeral(cases).format()}</strong></td>\r\n                        </tr>\r\n                        \r\n                    ))}\r\n                </tbody>\r\n                </table>\r\n            </div>\r\n\r\n             <StatsCards country={country} countryData={countryData} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import React,{useEffect,useState} from 'react';\r\nimport Table from '../Table/Table';\r\nimport './CountryList.css'\r\n\r\nconst sortData = (data) =>{\r\n    const sortedData = [...data]; \r\n\r\n    sortedData.sort((a,b) => b.cases-a.cases);\r\n\r\n    return sortedData;\r\n};\r\n\r\nconst CountryList = () => {\r\n\r\n    let [countryList,setCountryList] = useState([]);\r\n\r\n    const fetchCountryList = () => {\r\n\r\n        fetch('https://disease.sh/v3/covid-19/countries')\r\n        .then(res => res.json())\r\n        .then(data =>{\r\n          const sortedData = sortData(data);\r\n          setCountryList(sortedData);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchCountryList();\r\n        console.log('CountryList useEffect');\r\n      },[]);\r\n\r\n    const [search,setSearch] = useState('');\r\n    \r\n    const handleSearch = (e) => {\r\n        setSearch(e.target.value);\r\n    } \r\n\r\n    \r\n    if (countryList.length > 0) {\r\n        let str = search.trim().toLowerCase();\r\n        countryList = countryList.filter(item => item.country.toLowerCase().match(str));\r\n      }\r\n\r\n\r\n    return (\r\n        <div className=\"countryList\">\r\n            \r\n            <input \r\n                type=\"text\"\r\n                placeholder=\"Search Country...\"\r\n                onChange={handleSearch}\r\n                value={search}\r\n            />\r\n            <Table countryList={countryList}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryList\r\n","import React from 'react';\nimport './App.css';\nimport CountryList from './components/CountryList/CountryList';\n\nfunction App() {\n  const imageUrl='https://image.freepik.com/free-vector/coronavirus-cells-banner_1035-18753.jpg';\n  return (\n    <div className=\"app\">\n      <img src={imageUrl}/>\n      <CountryList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}